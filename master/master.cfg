# -*- python -*-
# ex: set filetype=python:

from buildbot.plugins import *

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

####### WORKERS

# The 'workers' list defines the set of recognized workers. Each element is
# a Worker object, specifying a unique worker name and password.  The same
# worker name and password must be configured on the worker.
c['workers'] = [
    worker.Worker("bsd-worker", "pass", max_builds=1),
]

# 'protocols' contains information about protocols which master will use for
# communicating with workers. You must define at least 'port' option that workers
# could connect to your master with this protocol.
# 'port' must match the value configured into the workers (with their
# --master option)
c['protocols'] = {
    'pb': {'port': 9989},
}

####### CHANGESOURCES

# the 'change_source' setting tells the buildmaster how it should find out
# about source code changes.  Here we point to the buildbot clone of pyflakes.

c['change_source'] = [
    changes.GitPoller(
        'git://github.com/JuliaLang/julia.git',
        workdir='gitpoller-workdir',
        branch='master',
        pollinterval=300),
]

####### SCHEDULERS

# Configure the Schedulers, which decide how to react to incoming changes.  In this
# case, just kick off a 'runtests' build

c['schedulers'] = [
    schedulers.SingleBranchScheduler(
        name="all",
        change_filter=util.ChangeFilter(branch='master'),
        treeStableTimer=None,
        builderNames=["110r-amd64"]),

    schedulers.ForceScheduler(
        name="force",
        builderNames=["110r-amd64"]),

    schedulers.Try_Userpass(
        name='try',
        port=5555,
        userpass=[('user','pass')],
        builderNames=["110r-amd64"]),
]

####### BUILDERS

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which workers can execute them.  Note that any particular build will
# only take place on one worker.

make_user_url = ('https://gist.githubusercontent.com/iblis17/'
                 'b4dca8221dcb96efcccde24f9cc2fa8d/raw/Make.user')

factory = util.BuildFactory()
# check out the source
factory.addSteps([
    steps.BSDSysInfo(),
    steps.BSDSetMakeEnv(uses='fortran'),

    steps.GitHub(
        repourl='git://github.com/JuliaLang/julia.git',
        mode='full',
        method='fresh'),

    steps.ShellCommand(
        command=['curl', '-o', 'Make.user', make_user_url],
        description='Make.user'),

    steps.Compile(
        command=['gmake', 'all', '-j', '6'],
        env=util.Property('make_env')),

    steps.Test(
        command=['gmake', 'test'],
        env={'JULIA_CPU_CORES': '2'})
])

c['builders'] = [
    util.BuilderConfig(
        name="110r-amd64",
        workernames=["bsd-worker"],
        factory=factory),
]

####### BUILDBOT SERVICES

# 'services' is a list of BuildbotService items like reporter targets. The
# status of each build will be pushed to these targets. buildbot/reporters/*.py
# has a variety to choose from, like IRC bots.

c['services'] = []

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot installation's
# home pages (linked to the 'titleURL').

c['title'] = "Julia"
c['titleURL'] = "https://github.com/JuliaLang/julia"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in
# the 'www' entry below, but with an externally-visible host name which the
# buildbot cannot figure out without some help.

c['buildbotURL'] = "http://140.113.31.207:8010/"

# minimalistic config to activate new web UI
c['www'] = {
    'port': 8010,
    'plugins': dict(waterfall_view={}, console_view={}),
}

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}
